#include <iostream>
using namespace std;

/*
Операторы в С++
Более подробно можно посмотреть на https://ru.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B_%D0%B2_C_%D0%B8_C%2B%2B

Арифметические
+ сложение
- вычитание
* умножение
/ деление
% возвращает остаток деления
++ инкремент (добавление 1)
-- декремент (вычитание 1)

Операторы присваивания
Примеры
Оператор	То же самое, что и		Комментрарий
x = 3		x = 3					Присвоить значение 3 переменной х
x += 3		x = x + 3				
x -= 3		x = x - 3
x *= 3		x = x * 3
x /= 3		x = x / 3
x %= 3		x = x % 3				Оператор модуль - остаток от деления
x &= 3		x = x & 3				Побитовое И, т.е 101 (число 5) & 100 (число 4) = 100 (число 4)
x |= 3		x = x | 3				Побитовое ИЛИ, 101 | 100 = 101
x ^= 3		x = x ^ 3				Побитовое исключающее ИЛИ (xor)
									Если бит в одном операнде 0, а в другом 1, то результат - 1
									В противном случае 0
									Т.е. 101 ^ 100 = 001
x <<= 3		x = x << 3				Побитовый сдвиг влево
									Смещение битов влево на 3 бита, при этом "пропуски" заменяются на 0
									00010111 (число 23) << 3 = 10111000 (число 184)
x >>= 3		x = x >> 3				Побитовый сдвиг вправо
									Смещение битов вправо на 3 бита, при этом "пропуски" заменяются на 0
									00010111 (число 23) >> 3 = 00000010 (число 2)

Операторы сравнения
Не будем на них останавливаться, а просто их перечислим
==		равно
!=		не равно
>		больше чем
<		меньше чем
>=		больше либо равно
<=		меньше либо равно
Возвращают false (0) или true (1)

Логические операторы
Необходимы для определения логики
Также не будем на них останавливаться, а просто их перечислим
&&		логическое И
||		логическое ИЛИ
!		inverse, т.е. true -> false или false -> true. Пример !(4 > 5 || 5 < 6) вернет false
*/

int main() {
	// арифметические операции
	int x = 5, y = 5;

	cout << "5 + 5 = " << 5 + 5 << endl;
	cout << "5 - 5 = " << 5 - 5 << endl;
	cout << "5 * 5 = " << 5 * 5 << endl;
	cout << "10 / 5 = " << 10 / 5 << endl;
	cout << "11 % 5 = " << 11 % 5 << endl;
	cout << "++X (X = 5 initialy) = " << ++x << endl;
	cout << "--Y (Y = 5 initialy) = " << --y << endl;

	// операторы присваивания
	int a = 5, b = 4;
	b &= a;
	cout << "5 & 4 = " << b << endl; // получим 5 & 4 = 4

	a = 23;
	int shift = 3;
	int a_left = a << shift;
	int a_right = a >> shift;
	cout << "23 << 3 = " << a_left << endl; // получим 23 << 3 = 184
	cout << "23 >> 3 = " << a_right << endl; // получим 23 >> 3 = 2

	// логические операторы
	bool check_log = !(4 > 5 || 5 < 6);
	cout << "!(4 > 5 || 5 < 6) = " << check_log;
	return 0;
}